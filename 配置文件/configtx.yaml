Organizations:
     ##  定义Orderer组织  【&OrdererOrg 这类语法类似 Go的中的指针及对象地址， 此处是被Profiles 中的 - *OrdererOrg 所引用，以下均为类似做法】

    - &OrderOrg
        Name: OrderOrg   ##组织名称
        ID: OrdererMSP    ##组织ID，ID是引用组织的关键
        ##  Orderer的 MSP 证书目录路径，MSP（Member service provider）MSP将颁发与校验证书，以及用户认证背后的所有密码学机制与协议都抽象了出来
        MSPDir: /home/gopath/src/github.com/hyperledger/milktracer/crypto-config/ordererOrganizations/cow.com/msp

        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('OrdererMSP.admin')"

    - &Org1
  ##  定义Peer组织 1
        Name: Org1MSP          ##组织名称
        ID: Org1MSP            ##组织ID
        MSPDir: /home/gopath/src/github.com/hyperledger/milktracer/crypto-config/peerOrganizations/org1.cow.com/msp

        AnchorPeers:          ##  定义组织锚节点 用于跨组织 Gossip 通信（gossip通信协议，一种基于六度分隔理论的消息扩散协议）
            - Host: peer0.org1.cow.com    ##  锚节点的主机名
              Port: 7051       ##  锚节点的端口号
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('Org1MSP.admin', 'Org1MSP.peer', 'Org1MSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('Org1MSP.admin', 'Org1MSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('Org1MSP.admin')"
    - &Org2
        Name: Org2MSP
        ID: Org2MSP
        MSPDir: /home/gopath/src/github.com/hyperledger/milktracer/crypto-config/peerOrganizations/org2.cow.com/msp
        AnchorPeers:
            - Host: peer0.org2.cow.com
              Port: 9051
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('Org2MSP.admin', 'Org2MSP.peer', 'Org2MSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('Org2MSP.admin', 'Org2MSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('Org2MSP.admin')"

    - &Org3
        Name: Org3MSP
        ID: Org3MSP
        MSPDir: /home/gopath/src/github.com/hyperledger/milktracer/crypto-config/peerOrganizations/org3.cow.com/msp
        AnchorPeers:
            - Host: peer0.org3.cow.com
              Port: 11051
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('Org3MSP.admin', 'Org3MSP.peer', 'Org3MSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('Org3MSP.admin', 'Org3MSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('Org3MSP.admin')"


Capabilities:
    # Channel capabilities apply to both the orderers and the peers and must be
    # supported by both.
    # Set the value of the capability to true to require it.
    Channel: &ChannelCapabilities
        # V1.4.3 for Channel is a catchall flag for behavior which has been
        # determined to be desired for all orderers and peers running at the v1.4.3
        # level, but which would be incompatible with orderers and peers from
        # prior releases.
        # Prior to enabling V1.4.3 channel capabilities, ensure that all
        # orderers and peers on a channel are at v1.4.3 or later.
        V1_4_3: true
        # V1.3 for Channel enables the new non-backwards compatible
        # features and fixes of fabric v1.3
        V1_3: false
        # V1.1 for Channel enables the new non-backwards compatible
        # features and fixes of fabric v1.1
        V1_1: false

    # Orderer capabilities apply only to the orderers, and may be safely
    # used with prior release peers.
    # Set the value of the capability to true to require it.
    Orderer: &OrdererCapabilities
        # V1.4.2 for Orderer is a catchall flag for behavior which has been
        # determined to be desired for all orderers running at the v1.4.2
        # level, but which would be incompatible with orderers from prior releases.
        # Prior to enabling V1.4.2 orderer capabilities, ensure that all
        # orderers on a channel are at v1.4.2 or later.
        V1_4_2: true
        # V1.1 for Orderer enables the new non-backwards compatible
        # features and fixes of fabric v1.1
        V1_1: false

    # Application capabilities apply only to the peer network, and may be safely
    # used with prior release orderers.
    # Set the value of the capability to true to require it.
    Application: &ApplicationCapabilities
        # V1.4.2 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.4.2.
        V1_4_2: true
        # V1.3 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.3.
        V1_3: false
        # V1.2 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.2 (note, this need not be set if
        # later version capabilities are set)
        V1_2: false
        # V1.1 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.1 (note, this need not be set if
        # later version capabilities are set).
        V1_1: false

################################################################################
Application: &ApplicationDefaults

    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Application policies, their canonical path is
    #   /Channel/Application/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"

    Capabilities:
        <<: *ApplicationCapabilities



Orderer: &OrdererDefaults    ##  自定义被引用的地址

    OrdererType: solo

    #可以用来连接的客户端和地址。
    #但是，这不允许客户机关联orderer地址和orderer组织，这对TLS验证之类的事情很有用。
    #指定orderer地址的首选方法现在是在组织定义中包含orderendpoints项
    Addresses:
         - orderer.cow.com:7050

    
    BatchTimeout: 2s      ##  区块打包的最大超时时间 (到了该时间就打包区块)

    # Batch Size: Controls the number of messages batched into a block.
    # The orderer views messages opaquely, but typically, messages may
    # be considered to be Fabric transactions.  The 'batch' is the group
    # of messages in the 'data' field of the block.  Blocks will be a few kb
    # larger than the batch size, when signatures, hashes, and other metadata
    # is applied.
    BatchSize:

        # Max Message Count: The maximum number of messages to permit in a
        # batch.  No block will contain more than this number of messages.
        MaxMessageCount: 500    ##  区块打包的最大包含交易数
  #允许的绝对最大字节数 
        # Absolute Max Bytes: The absolute maximum number of bytes allowed for  

        AbsoluteMaxBytes: 10 MB

        # Preferred Max Bytes: The preferred maximum number of bytes allowed

        PreferredMaxBytes: 2 MB  ##  一个区块的建议字节数，如果一个交易消息的大小超过了这个值, 就会被放入另外一个更大的区块中
    ##  【可选项】 表示Orderer 允许的最大通道数， 默认 0 表示没有最大通道数
    MaxChannels: 0

    Kafka:
        # kafka的 brokens 服务地址 允许有多个
        Brokers:
            - 127.0.0.1:9092
            - kafka0:9092
            - kafka1:9092
            - kafka2:9092

  #EtcdRaft定义了当“EtcdRaft”时必须设置的配置

  #已选择OrderType。 
    EtcdRaft:
        # The set of Raft replicas for this network. For the etcd/raft-based
        # implementation, we expect every replica to also be an OSN. Therefore,
        # a subset of the host:port items enumerated in this list should be
        # replicated under the Orderer.Addresses key above.
        Consenters:
            - Host: raft0.example.com
              Port: 7050
              ClientTLSCert: path/to/ClientTLSCert0
              ServerTLSCert: path/to/ServerTLSCert0
            - Host: raft1.example.com
              Port: 7050
              ClientTLSCert: path/to/ClientTLSCert1
              ServerTLSCert: path/to/ServerTLSCert1
            - Host: raft2.example.com
              Port: 7050
              ClientTLSCert: path/to/ClientTLSCert2
              ServerTLSCert: path/to/ServerTLSCert2

        # Options to be specified for all the etcd/raft nodes. The values here
        # are the defaults for all new channels and can be modified on a
        # per-channel basis via configuration updates.
        Options:
            # TickInterval is the time interval between two Node.Tick invocations.
            TickInterval: 500ms

            # ElectionTick is the number of Node.Tick invocations that must pass
            # between elections. That is, if a follower does not receive any
            # message from the leader of current term before ElectionTick has
            # elapsed, it will become candidate and start an election.
            # ElectionTick must be greater than HeartbeatTick.
            ElectionTick: 10

            # HeartbeatTick is the number of Node.Tick invocations that must
            # pass between heartbeats. That is, a leader sends heartbeat
            # messages to maintain its leadership every HeartbeatTick ticks.
            HeartbeatTick: 1

            # MaxInflightBlocks limits the max number of in-flight append messages
            # during optimistic replication phase.
            MaxInflightBlocks: 5

            # SnapshotIntervalSize defines number of bytes per which a snapshot is taken
            SnapshotIntervalSize: 16 MB

    #Organizations列出了参与网络订购方的组织。 
    Organizations:

    #策略在配置树的此级别定义策略集
    # For Orderer policies, their canonical path is
    #   /Channel/Orderer/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        # BlockValidation specifies what signatures must be included in the block
        # from the orderer for the peer to validate it.
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"
    Capabilities:
        <<: *OrdererCapabilities


Channel: &ChannelDefaults
    # Policies defines the set of policies at this level of the config tree
    # For Channel policies, their canonical path is
    #   /Channel/<PolicyName>
    Policies:
        # Who may invoke the 'Deliver' API
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        # Who may invoke the 'Broadcast' API
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        # By default, who may modify elements at this config level
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"


    # Capabilities describes the channel level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    Capabilities:
        <<: *ChannelCapabilities


Profiles:
    # 这边就是套的模板  模板位置：/fabric-sample/basic-network/
    OrgsOrdererGenesis:
        <<: *ChannelDefaults
        Orderer:   ##  指定Orderer系统通道自身的配置信息
            <<: *OrdererDefaults   ##  引用 Orderer 部分的配置  &OrdererDefaults
            Organizations:
                - *OrderOrg     ##  属于Orderer 的通道组织  该处引用了 【 &OrdererOrg 】位置内容
        Consortiums:     ##  Orderer 所服务的联盟列表
            SampleConsortium:    ##  创建更多应用通道时的联盟 引用 TwoOrgsChannel 所示
                Organizations:
                    - *Org1
                    - *Org2
                    - *Org3

    ##  应用通道模板 必须包括 Application、  Consortium 两部分       
      ##  应用通道配置。默认配置的应用通道，添加了两个组织。联盟为SampleConsortium
    OrgsChannel:
        <<: *ChannelDefaults
        Consortium: SampleConsortium
        Application:    ##  指定属于某应用通道的信息，主要包括 属于通道的组织信息
            <<: *ApplicationDefaults
            Organizations:    ##  初始 加入应用通道的组织
                - *Org1
                - *Org2
                - *Org3


